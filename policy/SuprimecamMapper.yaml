defects: ../suprimecam/defects

needCalibRegistry: true

levels:
  sensor: none
  skyTile:
  - visit
  - ccd
  tract: patch
  visit: ccd

defaultLevel: sensor

defaultSubLevels:
  sensor: none
  skyTile: sensor
  visit: sensor

camera: ../suprimecam/camera

# exposures and datasets which are needed for all of the mappers are defined
# in the obs_base package (in either exposures.yaml or datasets.yaml).
# Where a modification to such a dataset is required for a particular camera,
# (e.g., for a template or specialized python type), the modification will
# appear below as a partial dataset definition.

exposures:
  calexp:
    template: '%(pointing)05d/%(filter)s/corr/CORR%(visit)07d%(ccd)1d.fits'
  calibrated_exp:
    columns:
    - pointing
    - filter
    - visit
    - ccd
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    storage: FitsStorage
    tables:
    - raw
    - raw_visit
    template: '%(pointing)05d/%(filter)s/corr/%(tract)04d/CALEXP-%(visit)07d%(ccd)1d.fits'
  coaddTempExp:
    level: Skytile
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    storage: FitsStorage
    tables: raw
    template: coaddTemp/%(filter)s/%(tract)d/TEMP%(visit)07d%(ccd)1d-%(patch)s.fits
  dcor:
    columns:
    - pointing
    - filter
    - visit
    - ccd
    level: Ccd
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    storage: FitsStorage
    tables:
    - raw
    - raw_visit
    template: '%(pointing)05d/%(filter)s/corr/DCOR%(visit)07d%(ccd)1d.fits'
  deepCoadd_tempExp:
    template: deepCoadd/%(filter)s/%(tract)d/%(patch)s/warp-%(filter)s-%(tract)d-%(patch)s-%(visit)d.fits
  detj:
    columns:
    - pointing
    - filter
    - visit
    - ccd
    level: Ccd
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    storage: FitsStorage
    tables:
    - raw
    - raw_visit
    template: '%(pointing)05d/%(filter)s/corr/DETJ%(visit)07d%(ccd)1d.fits'
  expMetadata:
    level: Ccd
    persistable: ExposureI
    python: lsst.afw.image.ExposureI
    storage: FitsStorage
    tables:
    - raw
    - raw_visit
    template: '%(pointing)05d/%(filter)s/qa/metaQaExp%(visit)07d0.fits'
  fcr:
    columns:
    - pointing
    - filter
    - visit
    - ccd
    level: Ccd
    persistable: ExposureI
    python: lsst.afw.image.ExposureI
    storage: FitsStorage
    tables:
    - raw
    - raw_visit
    template: '%(pointing)05d/%(filter)s/corr/%(tract)04d/fcr%(visit)07d%(ccd)1d.fits'
  flattenedImage:
    level: Ccd
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    storage: FitsStorage
    tables:
    - raw
    - raw_visit
    template: '%(pointing)05d/%(filter)s/thumbs/flattened%(visit)07d%(ccd)d.fits'
  icExp:
    template: '%(pointing)05d/%(filter)s/corr/ICEXP%(visit)07d%(ccd)1d.fits'
  mosaicCalib:
    columns:
    - pointing
    - filter
    - visit
    - ccd
    level: Ccd
    persistable: ExposureU
    python: lsst.afw.image.ExposureU
    storage: FitsStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/output/CALIB%(visit)07d%(ccd)1d-%(tract)d.fits'
  ossImage:
    level: Ccd
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    storage: FitsStorage
    tables:
    - raw
    - raw_visit
    template: '%(pointing)05d/%(filter)s/thumbs/oss%(visit)07d%(ccd)d.fits'
  postISRCCD:
    template: postISRCCD/v%(visit)07d-f%(filter)s/c%(ccd)1d.fits
  raw:
    template: '%(field)s/%(dateObs)s/%(pointing)05d/%(filter)s/SUPA%(visit)07d%(ccd)1d.fits'
  revexp:
    level: Ccd
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    storage: FitsStorage
    tables:
    - raw
    - raw_visit
    template: '%(pointing)05d/%(filter)s/corr/CORW%(visit)07d%(ccd)d.fits'
  wcs:
    columns:
    - pointing
    - filter
    - visit
    - ccd
    template: '%(pointing)05d/%(filter)s/corr/%(tract)04d/wcs%(visit)07d%(ccd)1d.fits'

calibrations:
  bias:
    columns:
    - ccd
    - taiObs
    level: Ccd
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    refCols:
    - visit
    - filter
    reference: raw_visit
    storage: FitsStorage
    tables: bias
    template: BIAS/%(calibDate)s/NONE/BIAS-%(calibDate)s-%(ccd)1d.fits
    validEndName: validEnd
    validRange: true
    validStartName: validStart
  dark:
    columns:
    - ccd
    - taiObs
    level: Ccd
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    refCols:
    - visit
    - filter
    reference: raw_visit
    storage: FitsStorage
    tables: dark
    template: DARK/%(calibDate)s/NONE/DARK-%(calibDate)s-%(ccd)1d.fits
    validEndName: validEnd
    validRange: true
    validStartName: validStart
  flat:
    columns:
    - ccd
    - filter
    - taiObs
    filter: true
    level: Ccd
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    refCols:
    - visit
    - filter
    reference: raw_visit
    storage: FitsStorage
    tables: flat
    template: FLAT/%(calibDate)s/%(filter)s/FLAT-%(calibDate)s-%(filter)s-%(ccd)1d.fits
    validEndName: validEnd
    validRange: true
    validStartName: validStart
  fringe:
    columns:
    - ccd
    - filter
    - taiObs
    filter: true
    level: Ccd
    persistable: ExposureF
    python: lsst.afw.image.ExposureF
    refCols:
    - visit
    - filter
    reference: raw_visit
    storage: FitsStorage
    tables: fringe
    template: FRINGE/%(calibDate)s/%(filter)s/FRINGE-%(calibDate)s-%(filter)s-%(ccd)1d.fits
    validEndName: validEnd
    validRange: true
    validStartName: validStart

datasets:
  calexpBackground:
    template: '%(pointing)05d/%(filter)s/corr/BKGD%(visit)07d%(ccd)1d.fits'
  calexpThumb:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/thumbs/corr%(visit)07d%(ccd)d.png'
  calibrate_metadata:
    template: '%(pointing)05d/%(filter)s/calibrate_metadata/%(visit)07d%(ccd)1d.boost'
  calibrated_src:
    persistable: SourceCatalog
    python: lsst.afw.table.SourceCatalog
    storage: FitsCatalogStorage
    tables:
    - raw
    - raw_visit
    template: '%(pointing)05d/%(filter)s/output/%(tract)04d/CALSRC%(visit)07d%(ccd)1d.fits'
  characterizeImage_metadata:
    template: '%(pointing)05d/%(filter)s/characterizeImage_metadata/%(visit)07d%(ccd)1d.boost'
  deepCoadd_calexpBackground:
    persistable: PurePythonClass
    python: lsst.afw.math.BackgroundList
    storage: FitsCatalogStorage
    tables:
    - raw
    - raw_skyTile
    template: deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/bkgd-%(filter)s-%(tract)d-%(patch)s.fits
  deepCoadd_extract:
    persistable: ignored
    python: lsst.afw.table.SourceCatalog
    storage: FitsCatalogStorage
    tables:
    - raw
    - raw_skyTile
    template: deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/extract-%(tract)d-%(patch)s.fits
  deepCoadd_srcMatch:
    template: deepCoadd-results/%(filter)s/%(tract)d/%(patch)s/srcMatch-%(filter)s-%(tract)d-%(patch)s.fits
  deep_forcedPhotCoadd_config:
    persistable: Config
    python: lsst.pipe.tasks.forcedPhotCoadd.ForcedPhotCoaddConfig
    storage: ConfigStorage
    template: config/forcedPhotCoadd.py
  deep_forcedPhotCoadd_metadata:
    persistable: PropertySet
    python: lsst.daf.base.PropertySet
    storage: BoostStorage
    tables:
    - raw
    - raw_visit
    template: deepCoadd_forcedPhotCoadd_metadata/%(filter)s/%(tract)d/%(patch)s.boost
  fitsEllPaGrid:
    persistable: ImageF
    python: lsst.afw.image.ImageF
    storage: FitsStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/ellPaGrid%(visit)07d%(ccd)d.fits'
  fitsEllipticityGrid:
    persistable: ImageF
    python: lsst.afw.image.ImageF
    storage: FitsStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/ellipticityGrid%(visit)07d%(ccd)d.fits'
  fitsFwhmGrid:
    persistable: ImageF
    python: lsst.afw.image.ImageF
    storage: FitsStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/fwhmGrid%(visit)07d%(ccd)d.fits'
  fitsPsfModelGrid:
    persistable: ImageF
    python: lsst.afw.image.ImageF
    storage: FitsStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/psfModelGrid%(visit)07d%(ccd)d.fits'
  fitsPsfSrcGrid:
    persistable: ImageF
    python: lsst.afw.image.ImageF
    storage: FitsStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/psfSrcGrid%(visit)07d%(ccd)d.fits'
  flattenedThumb:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/thumbs/flattened%(visit)07d%(ccd)d.png'
  forcedPhotCcd_metadata:
    template: '%(pointing)05d/%(filter)s/tract%(tract)d/forcedPhotCcd_metadata/%(visit)07d%(ccd)1d.boost'
  forced_src:
    template: '%(pointing)05d/%(filter)s/tract%(tract)d/FORCEDSRC%(visit)07d%(ccd)1d.fits'
  forced_src_schema:
    template: schema/forced_src.fits
  icExpBackground:
    template: '%(pointing)05d/%(filter)s/corr/ICEXPBKGD%(visit)07d%(ccd)1d.fits'
  icMatch:
    persistable: BaseCatalog
    python: lsst.afw.table.BaseCatalog
    storage: FitsCatalogStorage
    tables:
    - raw
    - raw_visit
    template: '%(pointing)05d/%(filter)s/output/MATCH%(visit)07d%(ccd)1d.fits'
  icMatchFull:
    persistable: BaseCatalog
    python: lsst.afw.table.BaseCatalog
    storage: FitsCatalogStorage
    tables:
    - raw
    - raw_visit
    template: '%(pointing)05d/%(filter)s/output/ML%(visit)07d%(ccd)1d.fits'
  icSrc:
    template: '%(pointing)05d/%(filter)s/output/ICSRC%(visit)07d%(ccd)1d.fits'
  isr_config:
    python: lsst.obs.subaru.isr.SuprimeCamIsrConfig
  isr_metadata:
    template: '%(pointing)05d/%(filter)s/isr_metadata/%(visit)07d%(ccd)1d.boost'
  log:
    persistable: None
    python: str
    storage: TextStorage
    template: '%(pointing)05d/%(filter)s/logs/run.log'
  logDir:
    persistable: None
    python: str
    storage: None
    template: '%(pointing)05d/%(filter)s/logs'
  mergeCoaddMeasurements_config:
    python: lsst.pipe.tasks.multiBand.MergeSourcesConfig
  multiband_config:
    persistable: Config
    python: hsc.pipe.tasks.multiband.MultiBandConfig
    storage: ConfigStorage
    template: config/multiband.py
  ossThumb:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/thumbs/oss%(visit)07d%(ccd)d.png'
  plotEllipseGrid:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/ellipseGrid%(visit)07d%(ccd)d.png'
  plotEllipseMap:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/ellipseMap%(visit)07d%(ccd)d.png'
  plotEllipticityGrid:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/ellipticityGrid%(visit)07d%(ccd)d.png'
  plotEllipticityMap:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/ellipticityMap%(visit)07d%(ccd)d.png'
  plotFwhmGrid:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/fwhmGrid%(visit)07d%(ccd)d.png'
  plotMagHist:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/magHist%(visit)07d%(ccd)d.png'
  plotPsfModelGrid:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/psfModelGrid%(visit)07d%(ccd)d.png'
  plotPsfSrcGrid:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/psfSrcGrid%(visit)07d%(ccd)d.png'
  plotSeeingMap:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/seeingMap%(visit)07d%(ccd)d.png'
  plotSeeingRobust:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/seeingRobust%(visit)07d%(ccd)d.png'
  plotSeeingRough:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/seeingRough%(visit)07d%(ccd)d.png'
  processCcd_metadata:
    template: '%(pointing)05d/%(filter)s/processCcd_metadata/%(visit)07d%(ccd)1d.boost'
  processStack_metadata:
    persistable: PropertySet
    python: lsst.daf.base.PropertySet
    storage: BoostStorage
    tables:
    - raw
    - raw_visit
    template: stack/%(stack)05d/processStack_metadata/%(patch)08d%(filter)s.boost
  singleFrameDriver_metadata:
    persistable: PropertySet
    python: lsst.daf.base.PropertySet
    storage: BoostStorage
    tables:
    - raw
    - raw_visit
    template: '%(pointing)05d/%(filter)s/singleFrameDriver_metadata/%(visit)07d.boost'
  src:
    template: '%(pointing)05d/%(filter)s/output/SRC%(visit)07d%(ccd)1d.fits'
  srcMatch:
    template: '%(pointing)05d/%(filter)s/output/SRCMATCH%(visit)07d%(ccd)1d.fits'
  srcMatchFull:
    persistable: BaseCatalog
    python: lsst.afw.table.BaseCatalog
    storage: FitsCatalogStorage
    tables:
    - raw
    - raw_visit
    template: '%(pointing)05d/%(filter)s/output/SRCML%(visit)07d%(ccd)1d.fits'
  stack_config:
    persistable: Config
    python: hsc.meas.mosaic.stackTask.StackConfig
    storage: ConfigStorage
    tables:
    - raw
    - raw_visit
    template: config/stack.py
  tableSeeingGrid:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/seeingGrid%(visit)07d%(ccd)d.txt'
  tableSeeingMap:
    persistable: None
    python: __builtin__.str
    storage: TextStorage
    tables: raw
    template: '%(pointing)05d/%(filter)s/qa/seeingMap%(visit)07d%(ccd)d.txt'
  warppsf:
    persistable: Psf
    python: lsst.afw.detection.Psf
    storage: BoostStorage
    tables: raw_skytile
    template: '%(pointing)05d/%(filter)s/warp/WARPPSF-%(visit)07d-%(ccd)03d.boost'

